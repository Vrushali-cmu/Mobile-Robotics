function pose_f = GetObstaclePose(range_data)

range_arr = zeros(360,2);
img_count=1;
while(img_count<2)
i=1
    while(true)
    r = robot.laser.data.ranges(i)
    [x y b] = irToXy(i,r);
    %if(r>1 || r<0.05)
    %    x=0;
    %    y=0;
    %end
    
    range_arr(i,1) = x;
    range_arr(i,2) = y;
    
    i= i+1;
    
    if(i>360)
        break;
    end
    end
figure(img_count);
axis([-1 1 -1 1])
scatter(range_arr(:,2),range_arr(:,1),'.');
save('temp_file','range_arr');
beep;
pause(10);
img_count = img_count+1;
end

img = rangeImage(range_arr,1,0);
img_corrected = rangeImage(range_arr,1,1);

figure(1);
img.plotXvsY();
hold on;

[l_err_min num_f pose_f] = img.findLineCandidate(img_corrected.tArray(1));
i=2;
while(i<img_corrected.numPix+1)
    [l_err_tmp num_tmp pose_tmp] = img.findLineCandidate(img_corrected.tArray(i));
    if(num_tmp>2)
        if (l_err_tmp<l_err_min)
            l_err_min = l_err_tmp;
            num_f = num_tmp;
            pose_f = pose_tmp;
        end
    end
    i=i+1;
end
plot(pose_f(1,2),pose_f(1,1),'+');
hold on;
%x = [pose_f(2)-pose_f(3) pose_f(1)+1];
%y = [pose_f(2)+pose_f(3) pose_f(1)-1];
%plot(y,x);


figure(2);
img_corrected.plotXvsY();

